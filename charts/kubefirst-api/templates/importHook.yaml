{{- if .Values.importClusterRecord }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kubefirst-api.fullname" . }}-import-hook
  labels:
    {{- include "kubefirst-api.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "kubefirst-api.fullname" . }}-import-hook
      labels:
        {{- include "kubefirst-api.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-mongodb
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command:
            [
              'sh',
              '-c',
              'until nc -vz ${SERVICE_NAME}.${SERVICE_NAMESPACE} 27017; do echo "Waiting for mongodb..."; sleep 3; done;',
            ]
          env:
            - name: SERVICE_NAME
              value: {{ .Release.Name }}-mongodb
            - name: SERVICE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
        - name: wait-for-api
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command:
            [
              'sh',
              '-c',
              'until nc -vz ${SERVICE_NAME}.${SERVICE_NAMESPACE} 80; do echo "Waiting for api..."; sleep 3; done;',
            ]
          env:
            - name: SERVICE_NAME
              value: {{ .Release.Name }}-api
            - name: SERVICE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      containers:
        - name: {{ include "kubefirst-api.fullname" . }}-import-hook
          image: curlimages/curl
          imagePullPolicy: IfNotPresent
          env:
            - name: SERVICE_NAME
              value: {{ .Release.Name }}-mongodb
            - name: SERVICE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: env-secrets
          args: [
            "-X",
            "POST",
            "http://${SERVICE_NAME}.${SERVICE_NAMESPACE}:8081/api/v1/cluster/import",
            "-H",
            "Content-Type: application/json",
            "-d",
            '{"cloud_provider": "${CLOUD_PROVIDER}", "cloud_region": "${CLOUD_REGION}", "cluster_name": "${CLUSTER_NAME}", "state_store_credentials": {"access_key_id": "${ACCESS_KEY_ID}", "secret_access_key": "${SECRET_ACCESS_KEY}"}, "state_store_details": {"name": "${STATE_STORE_NAME}"}}'
          ]
{{- end }}
